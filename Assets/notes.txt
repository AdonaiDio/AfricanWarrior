

talvez um BehaviorTree seja necessário para o controle do inimigo em combate, 
mas isso aumenta muito a complexidade. 
(pra mim que não tenho pratica com behavior/"AI")


-----------

fazer uma implementação hardcoded antes de um Command pattern
Command pattern vai servir para encapsular AI Behavior e ações em 1 comando. 
Exemplo: Comando_Atacar_barço_equerdo, esse comando resolve tudo, desde animação, som a lógica.
Para gerenciar e aplicar diferentes habilidades, power-ups ou efeitos durante o jogo.

-----------

Fazer:

>criar turno automatico do inimigo
>usando as mesma possibilidades de comando

----
ETAPAS COMBATE
>inicia turno
>Seleciona a parte
>seleciona skill ou attack(se tiver)
>resultado (subtrai os custo e executa a ação DANO)
>retorna para a seleção de parte...
>cond. sem PA ou quer passar -> terminar o turno
----

---------
POR ULTIMO:
Ajustar skins
ajustar animações
ajustar sons

----------
clicar no mapa e iniciar combate
Pop-up se que batalhar

Inicia o combate instanciando o inimigo 
com as infos da build passadas pelo level Info

-----------

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Iniciar combate do mapa.

Criar uma cena de combate por ponto no mapa.

Bloquear movimento pro proximo ponto no mapa até 
ter vencido o combate anterior.

Colocar e fazer os novos personagens e animações, som...

Tela de fim de jogo( Vitoria/ Derrota)
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Testar o jogo todo!